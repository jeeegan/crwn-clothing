{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jamie/Desktop/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport { selectCartItems } from '../../redux/cart/cart.selectors.js';\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-items\",\n    children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"empty-message\",\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      toggleCartHidden();\n    },\n    children: \"GO TO CHECKOUT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n_c = CartDropdown;\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst matchStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(matchStateToProps, mapDispatchToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/Users/jamie/Desktop/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","createStructuredSelector","withRouter","CustomButton","CartItem","selectCartItems","CartDropdown","cartItems","history","toggleCartHidden","length","map","cartItem","id","push","mapDispatchToProps","dispatch","matchStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAAQC,eAAR,QAA8B,oCAA9B;AAEA,OAAO,6BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,kBACnB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAEIF,SAAS,CAACG,MAAV,GACEH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAAI,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YAA1B,CADF,gBAEI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADF,eAQE,QAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAM;AAC3BL,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,gBAAgB;AACf,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,Y;;AAkBN,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,gBAAgB,EAAE,MAAMO,QAAQ,CAACP,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAIA,MAAMQ,iBAAiB,GAAGhB,wBAAwB,CAAC;AACjDM,EAAAA,SAAS,EAAEF;AADsC,CAAD,CAAlD;AAIA,eAAeH,UAAU,CAACF,OAAO,CAACiB,iBAAD,EAAoBF,kBAApB,CAAP,CAA+CT,YAA/C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect';\nimport {withRouter} from 'react-router-dom';\n\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport {selectCartItems} from '../../redux/cart/cart.selectors.js';\n\nimport './cart-dropdown.styles.scss';\n\nconst CartDropdown = ({cartItems, history, toggleCartHidden}) => (\n  <div className='cart-dropdown'>\n    <div className='cart-items'>\n      {\n        cartItems.length ?\n          cartItems.map(cartItem => <CartItem key={cartItem.id} item={cartItem}/>)\n          : <span className='empty-message'>Your cart is empty</span>\n      }\n    </div>\n    <CustomButton onClick={() => {\n      history.push('/checkout');\n      toggleCartHidden();\n      }}>\n      GO TO CHECKOUT\n    </CustomButton>\n  </div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst matchStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(matchStateToProps, mapDispatchToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}
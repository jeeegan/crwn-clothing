{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    console.error(err);\n  }\n}\n;\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  try {\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    console.log(err);\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n\n    if (!userAuth) {\n      return;\n    }\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n;\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n;\nexport function* userSagas() {\n  yield all([call(onSignUpStart), call(onGoogleSignInStart), call(onEmailSignInStart), call(onSignOutStart), call(onCheckUserSession)]);\n}\n;","map":{"version":3,"sources":["/Users/jamie/Desktop/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signUp","payload","email","password","displayName","user","createUserWithEmailAndPassword","signUpSuccess","err","console","signInAfterSignUp","log","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","signOut","isUserAuthenticated","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport {signInSuccess, signInFailure, signOutSuccess, signOutFailure} from './user.actions';\n\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n};\n\nexport function* signUp({payload: {email, password, displayName}}) {\n  try {\n    const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({user, additionalData: {displayName}}));\n  } catch (err){\n    console.error(err);\n  }\n};\n\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\n  try {\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport function* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n};\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    yield put(signInFailure(error))\n  }\n};\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch(error) {\n    yield put(signOutFailure(error));\n  }\n};\n\nexport function* isUserAuthenticated() {\n try {\n  const userAuth = yield getCurrentUser();\n  if(!userAuth) {\n    return;\n  }\n  yield getSnapshotFromUserAuth(userAuth);\n } catch(error) {\n  yield put(signInFailure(error));\n }\n};\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\n};\n\nexport function* onSignUpSuccess() {\nyield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n};\n\nexport function* onGoogleSignInStart() {\n yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n};\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n};\n\nexport function* userSagas () {\n  yield all([\n    call(onSignUpStart),\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onSignOutStart),\n    call(onCheckUserSession)\n  ])\n};"]},"metadata":{},"sourceType":"module"}